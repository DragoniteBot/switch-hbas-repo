{
    "package": "sphaira",
    "info": {
        "title": "sphaira",
        "author": "iTotalJustice",
        "category": "tool",
        "version": "0.10.2",
        "url": "https://github.com/ITotalJustice/sphaira",
        "license": "GPLv3",
        "description": "A hbmenu alternative",
        "details": "A homebrew menu for the switch.\\n\\nFeatures: \\nLaunch homebrew\\nFile browser\\nAppstore\\nCreate / installer forwarders for homebrew\\nTheme browser, powered by Themezer\\nAnd many more! \\n A homebrew menu for the switch."
    },
    "changelog": "0.10.2\\nAdded Ukrainian language by @rashevskyv\\nFix hbmenu not being updated on exit due to faulty string compare.\\n\\n0.10.1\\nFix sd card dumping due to not creating the output path.\\n\\n0.10.0\\nadd layout options (list, icons, grid) to all grid based menus (homebrew, games, appstore).\\nremove bubbles.\\nfix building for gcc 15.\\nhaze (mtp) now runs on its own thread, rather than the main thread.\\nadd sysmmc / emummc install enable options, to allow for install to be toggled per setup.\\n[games menu] loading the control data is ran on its own thread, it does not block the main thread. allows for smooth scrolling like nintendos home menu.\\n[games menu] on fw20+, sphaira manually parses the control data, rather than using ns. manually parsing takes 20-40ms, which is faster than ms which can take 50-500ms.\\n[games menu] on fw19 and below, if the control data is not in ns cache, sphaira will manually parse the data as its twice as fast as ns. You can see how fast this is by loading the gamecard menu as that manually parses everything, and it loads the gamecard faster than the home menu.\\noptimise theme meta loading.\\n[gc menu] tries to load control data from ns cache before manually loading.\\nfix installing failing during setup if prod.keys isn't found. thanks to Marulv for helping with debugging this issue.\\ndon't fail if the control nca cannot be parsed during install, as it may depend on ticket not yet installed.\\n[games menu] add game dumping.\\n[games menu] add usb game transfer (switch 2 switch).\\nadd support for custom upload locations (http, ftp, webdav etc).\\n[games menu] add support for game dumping to custom upload location.\\n[file browser] add support for uploading files / folders to custom upload locations.\\n\\n0.9.1\\nFix freeze when closing the usb menu whilst a usb cable is not connected.\\n\\n0.9.0\\nReduce rounding of icons from 15 -> 5.\\nAdd image support to option boxes.\\nFix potential memleak when deleting homebrew from the homebrew menu. this would cause the image to not be free'd.\\nAdded scrolling text support for all text that gets clipped. Highlighting the entry will start scrolling the text. You can adjust the scroll speed in the \"Advanced options\" menu by selecting \"Text scroll speed\".\\nAdded \"Games\" menu. This allows currently allows you to launch and delete installed games. There's some bonus options such as \"launch random\" which picks a random game to launch, and \"hide forwarders\" which hides installed forwarders.\\nChanged the title_id generation for forwarders. This change was to support the above \"hide forwarders\" option (see below).\\nAdd option to extract zip files to the root of the sd card.\\nAdded option to change the right-side menu (see below).\\nReplaced the \"enabled\" and \"disabled\" options with \"On\" and \"Off\".\\nFixed file browser crash when using select all (L2) whilst there exists a hidden file and the hide hidden files option was enabled.\\nImprove USB (installer) exiting speed by now waiting on an event, rather than relying on timeout.\\nUpdate de.json (added 12h format) by @glitched-nx in #130.",
    "assets": [
        {
            "url": "https://github.com/ITotalJustice/sphaira/releases/download/0.10.2/sphaira.zip",
            "type": "zip",
            "zip": [
                {
                    "path": "/**/*",
                    "dest": "/",
                    "type": "update"
                }
            ]
        },
        {
            "type": "icon",
            "url": "icon.png"
        },
        {
            "url": "homebrew.png",
            "type": "screenshot"
        },
        {
            "url": "files.png",
            "type": "screenshot"
        },
        {
            "url": "theme.png",
            "type": "screenshot"
        },
        {
            "url": "appstore1.png",
            "type": "screenshot"
        },
        {
            "url": "appstore2.png",
            "type": "screenshot"
        }
    ]
}
